version: '2.1'

services:
  selenoid:
    network_mode: "host"
    image: aerokube/selenoid:1.10.3
    container_name: 'selenoid'
    volumes:
      - '/home/rolf/.aerokube/selenoid:/etc/selenoid'
      - '/var/run/docker.sock:/var/run/docker.sock'
    command: ['-conf', '/etc/selenoid/browsers.json', '-container-network', 'selenoid']
    ports:
      - '4444:4444'

  mysql_db:
    network_mode: "host"
    image: 'percona:latest'
    restart: always
    container_name: 'mysql_db'
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: DB_MYAPP
      MYSQL_USER: test_qa
      MYSQL_PASSWORD: qa_test
    ports:
      - '3306:3306'
    volumes:
      - './mysql/myapp_db:/docker-entrypoint-initdb.d'
    healthcheck:
      test: ['CMD', 'mysql', '-uroot', '-padmin', '-hlocalhost', '-P3306']
      timeout: 2s
      retries: 15

  mock:
    network_mode: "host"
    image: 'vk_api'
    container_name: 'mock'
    ports:
      - '9000:9000'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://0.0.0.0:9000/status']
      timeout: 2s
      retries: 15

  myapp:
    network_mode: "host"
    image: 'myapp'
    container_name: 'myapp'
    ports:
      - '9999:9999'
    links:
      - 'mock:mock'
      - 'mysql_db:mysql_db'
    volumes:
      - "./:/config_dir"
    entrypoint: "/app/myapp --config=/config_dir/myapp.conf"
    depends_on:
      selenoid:
        condition: service_started
      mysql_db:
        condition: service_healthy
      mock:
        condition: service_healthy
